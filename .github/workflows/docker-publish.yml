# .github/workflows/publish-auto-version.yml
# This workflow automates versioning and releases based on commit messages.

name: Automatic Versioning and Release

on:
  push:
    branches:
      - main

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    outputs:
      new_release_published: ${{ steps.release.outputs.new_release_published }}
      new_release_version: ${{ steps.release.outputs.new_release_version }}
      new_release_tag: ${{ steps.release.outputs.new_release_tag }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          # We need to fetch all history and tags for the versioning action
          fetch-depth: 0

      - name: Automatic Versioning and Release Creation
        id: release
        uses: google-github-actions/release-please-action@v4
        with:
          release-type: go
          package-name: cfst-client

  build-and-publish:
    name: Build Binaries and Push Docker
    needs: release # This job runs only after the 'release' job is complete
    # Only run this job if a new release was actually created
    if: needs.release.outputs.new_release_published == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.25'

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build binaries for release
        run: |
          echo "Building binaries for release version ${{ needs.release.outputs.new_release_version }}..."
          mkdir -p release_assets
          CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -o release_assets/cfst-client-linux-amd64 ./cmd/main.go
          CGO_ENABLED=0 GOOS=linux GOARCH=arm64 go build -o release_assets/cfst-client-linux-arm64 ./cmd/main.go
          CGO_ENABLED=0 GOOS=windows GOARCH=amd64 go build -o release_assets/cfst-client-windows-amd64.exe ./cmd/main.go
          CGO_ENABLED=0 GOOS=windows GOARCH=386 go build -o release_assets/cfst-client-windows-386.exe ./cmd/main.go

      - name: Upload Binaries to Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ needs.release.outputs.new_release_tag }}
          files: release_assets/*

      - name: Build and push Docker image
        run: |
          VERSION_TAG=${{ needs.release.outputs.new_release_version }}
          docker buildx build \
            --platform linux/amd64,linux/arm64 \
            --tag docker.io/${{ secrets.DOCKER_USERNAME }}/cfst-client:${VERSION_TAG} \
            --tag docker.io/${{ secrets.DOCKER_USERNAME }}/cfst-client:latest \
            --output type=registry \
            .
